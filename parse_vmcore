#!/bin/sh

[ -f load_modules ] || exit
WDIR=${WDIR:-"$HOME/work"}

log_extr $1 &
log_pid=$!
vmcore_stack $1 &
dump_dmesg $1
core=$(basename $1)
analysis=analysis_$core
dmesg=dmesg_$core
ls -la $1 > $analysis
grep "Lustre: Build" $dmesg >> $analysis
grep "LNet: Added LNI" $dmesg >> $analysis
echo "" >> $analysis
grep MARKER $dmesg | tail -n 4 >> $analysis
if grep "SysRq : Trigger a crash" $dmesg; then
	vmcore_sysrq $1 &
else if grep "ptlrpc_import_recovery_state_machine()) ASSERTION" $dmesg; then
	if grep "Version mismatch during replay" $dmesg; then
		grep "Version mismatch during replay" $dmesg >> $analysis
	else
		crash_cmd $1 "extend $WDIR/crash_ext/mpykdump64.so \n
		      epython ../../bin/analyze.py >> $analysis"
	fi
else if grep "LBUG upon eviction" $dmesg; then
	crash_cmd $1 "extend $WDIR/crash_ext/mpykdump64.so \n
		      epython ../../bin/analyze.py >> $analysis"
else
	vmcore_fp $1
	pid=$(grep PID $analysis | cut -d' ' -f 2 |uniq)
	req=$(grep struct\ ptlrpc_request $analysis | cut -d' ' -f 3)
	wait $log_pid
	grep ":"$pid":" log.dk_$core | tail >> $analysis
	[ $req != 0 ] && crash_cmd $1 "extend $WDIR/crash_ext/mpykdump64.so \n
		 epython ../../bin/ptlrpc.py -r $req >> $analysis"
fi
fi
fi
wait

